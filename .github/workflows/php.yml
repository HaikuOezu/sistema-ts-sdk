name: PHP Composer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    - name: Run test suite
      run: composer run-script test
      
    - name: Code Inspector GitHub action
      # You may pin to the exact commit or the version.
      # uses: codeinspectorio/github-action@01c818be303e2c4bcec991ca1c51feab753a1e2a
      uses: codeinspectorio/github-action@v1
      with:
        # Token to checkout the repository.
        repo_token:  ${{ secrets.GITHUB_TOKEN }}
        # Access key on Code Inspector
        code_inspector_access_key: ${{ secrets.CODE_INSPECTOR_ACCESS_KEY }}
        # Secret key on Code Inspector
        code_inspector_secret_key: ${{ secrets.CODE_INSPECTOR_SECRET_KEY }}
        # Minimum grade. Valid options are EXCELLENT, GOOD, NEUTRAL, WARNING, CRITICAL. Leave blank to ignore.
        min_quality_grade: "GOOD" # default is 
        # Minimum quality score from 0 (worst) to 100 (best)
        min_quality_score: "95" # default is 0
        # Maximum defect rate per line of code (e.g. 0.01 for 1 defect per 100 lines of code). Leave 0 to ignore.
        max_defects_rate: "0.0001" # default is 0
        # Maximum number of complex functions rate (e.g. number of complex functions / number of functions). Leave 0 to ignore.
        max_complex_functions_rate: "0.0001" # default is 0
        # Maximum number of long functions rate (e.g. number of long functions / number of functions). Leave 0 to ignore.
        max_long_functions_rate: "0.0001 # default is 0
        # Project on code inspector. Will use the preferences of this analysis. Leave blank and no preferences are used
        project_name: "sistema-ts-sdk" # default is 
        # Timeout before giving up (in case analysis takes too long). Default is 10 minutes
        max_timeout_sec: "600" # default is 600
